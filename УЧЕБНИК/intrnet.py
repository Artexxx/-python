"""
HTTP - протокол обмена гипертекстом(href-huper referens), картинки, видео.
HTTP протокол --  2 стороны (клиент(мы) и сервер) куда делаем запрос на ресурс.
ресурс -- веб страницы или файлы, описываем с помощью URL.
URL:uniform resours location -- единобразный локатор ресурсов-- о том как и где мы можем взять ресурс.
Пример URL-> 3 компонента
 https ://| stepic.org |/ 512           |
протокол  |домен,хост  | путь до ресурса|
1) протокол - бывают разные /ftp -обмен файлами/
2) домен - нужен для распознования на какой сервер отправить запрос
3) путь - если на сервере много ресурсов то нужен путь
Для тестирования ﻿можно зайти на https://apitester.com/﻿ чтобы ﻿выполнить и просмотреть результаты запросов
Как же формируется ( REQUEST )ЗАПРОС?
https://ru.wikipedia.org/wiki/Python
|-1-||-----2----||---3---|
 GET/wiki/Python HTTP/1.1
 Host:ru.wikipedia.org
 ...
1)method который хотим применить к нашему ресурсу
  GET - хотим получить ресурс
2)ресурс который хотим получить внутри википедии
3)версия нашего http протокола
Как же формируется (RESPONSE)ОТВЕТ?
 |---1---|-2-|-3-|
[1]HTTP/1.1 200 OK
1)версия нашего http протокола
2)статус код / 404-файл не найден / 500-ошибка на сервере\
3)сообщение
[2] Date:sun,10 Apr 2019 18:21:18 GMT
[3] Content-Type:text/html;charset=UTF-8
...
[4]Пустая строка
[5] Запрашиваемый ресурс """

"""GET request"""
import requests

"""requests- выбираем http метод который хотим использовать, ресурс который хотим получить,
             а библеотека сама отправит запрос на сервер
             можем получить нужную деталь ответа с помощью атрибутов    """

res = requests.get("https://docs.python.org/3.5/")  # указали свой url

r = requests.get("https://yandex.py/search/",  # search - параметр
                 params={"text": "Porno"})  # с помощью params можно передать собственные параметры

res.raise_for_status()

print(res.status_code)
print(res.headers['content-type'])
print(res.url)  # URL сайта
print(res.content)  # бинарные данные ресурса ,полезныу для фото-видео
print(res.text)  # текстовые/html/ данные ресурса

"""API какого либо сервера -- набор функций, констант и методов которые мы можем использовать 
                                и про каждую известно что она получает и Возвращает 


                                """
