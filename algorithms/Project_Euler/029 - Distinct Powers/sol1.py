"""
Рассмотрим все целочисленные комбинации a^b для 2 ≤ a ≤ 5 и 2 ≤ b ≤ 5:

2^2=4,  2^3=8,   2^4=16,  2^5=32
3^2=9,  3^3=27,  3^4=81,  3^5=243
4^2=16, 4^3=64,  4^4=256, 4^5=1024
5^2=25, 5^3=125, 5^4=625, 5^5=3125

Если их расположить в порядке возрастания, исключив повторения,
мы получим следующую последовательность из 15 различных членов:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

Сколько различных членов имеет последовательность a^b для
 2 <= a <= 100 и 2 <= b <= 100?

  №      Время  Замедление      Число    Результат
---  ---------  ------------  -------  -----------
  1  3.96e-05   0.004%             10           69
  2  0.0090382  0.90%             100         9183
  3  6.30244    629.34%          1000       977358
"""


def solution(n):
    """Возращает количество различных членов в последовательности, сгенерированной 2 <= a <= N и 2 <= b <= N

    >>> solution(100)
    9183
    """
    collectPowers = set()

    N = n + 1
    for a in range(2, N):
        for b in range(2, N):
            currentPow = a ** b  # вычисляет текущую степень
            collectPowers.add(currentPow)
    return len(collectPowers)


if __name__ == "__main__":
    print(solution(int(input().strip())))
    # ### Run Time-Profile Table ###
    # import sys;sys.path.append('..')
    # from time_profile import my_time_this
    # my_time_this(solution, [10, 100, 1000])
