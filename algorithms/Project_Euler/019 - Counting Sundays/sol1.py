"""
Дана следующая информация (однако, вы можете проверить ее самостоятельно):

1 января 1900 года - понедельник.
В апреле, июне, сентябре и ноябре 30 дней.
В феврале 28 дней, в високосный год - 29.
В остальных месяцах по 31 дню.

Високосный год  - любой год, делящийся нацело на 4, однако последний год века (ХХ00) является високосным в том и только том случае, если делится на 400.
Сколько воскресений выпадает на первое число месяца в двадцатом веке (с 1 января 1901 года до 31 декабря 2000 года)?
"""

isLeap = lambda year: year % 4 == 0 and (year % 100 != 0 or year % 400 == 0)


def solution():
    """Возвращает число воскресений, приходящихся на первое число месяца (с 1 января 1901 года по 31 декабря 2000 года)?

    >>> solution()
    171
    """
    months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

    # 1900 не является особенным, так что мы можем использовать математику
    day = 365 % 7  # 0 => mon, 6 => sun
    sundays = 0
    for year in range(1901, 2001):
        for m in months:
            if day == 6:
                sundays += 1
            # Check for leap year
            if m == 28 and isLeap(year):
                m += 1
            day = (m % 7 + day) % 7
    return sundays

if __name__ == '__main__':
    print(solution())
