"""
Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих.
Начиная с 1 и 2, первые 10 элементов будут:

    1,2,3,5,8,13,21,34,55,89,..

Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают n.

  №     Время  Замедление                       Число                Результат
---  --------  ------------  ------------------------  -----------------------
  1  7.1e-06   0.001%           100000000000000000000     67650926172353373024
  2  7.5e-06   0.00%           1000000000000000000000   1213946614199987541226
  3  7.6e-06   0.00%          10000000000000000000000   5142360378806858706956
  4  8.e-06    0.00%         100000000000000000000000  92275912896516548183166
"""



def solution(n):
    """ Возвращает сумму всех четных чисел ряда Фибоначчи, которые ниже или равны n.
    [*] это решение основано на законамерности в числах

    >>> solution(10)
    10
    >>> solution(15)
    10
    >>> solution(2)
    2
    >>> solution(1)
    0
    >>> solution(34)
    44
    """
    if n <= 1: return 0
    a, b = 0, 2
    result_sum = 0
    while 4 * b + a <= n:
        a, b = b, 4 * b + a
        result_sum += a
    return result_sum + b


if __name__ == "__main__":
    print(solution(int(input().strip())))
    # ### Run Time-Profile Table ###
    # import sys; sys.path.append('..')
    # from time_profile import my_time_this
    # my_time_this(solution, [100_000_000_000_000_000_000, 1_000_000_000_000_000_000_000, 10_000_000_000_000_000_000_000, 100_000_000_000_000_000_000_000])
